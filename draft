from turtle import Screen
from snake import Snake
from food import Food
from scoreboard import ScoreBoard
import time

screen = Screen()
screen.colormode(255)
screen.title("Welcome to Snake Game üêç")
screen.setup(width=600, height=600)
screen.bgpic("snake_bg.gif")
screen.textinput(title="Snake Game", prompt="Enter your name")
screen.tracer(0)  # Making the animation changes tracing 'off'
# So that you can see a flawless movement in the output console

snake = Snake()
food = Food()
scoreboard = ScoreBoard()
screen.listen()
screen.onkey(fun=snake.move_up, key="Up")
screen.onkey(fun=snake.move_down, key="Down")
screen.onkey(fun=snake.move_right, key="Right")
screen.onkey(fun=snake.move_left, key="Left")

game_over = False
while not game_over:
    screen.update()  # Important part of screen.tracer() usage is using screen.update()
    # You can use this update in different location, which will update accordingly
    time.sleep(0.1)  # This will control the speed of execution by 0.2 second
    # Now we will have 0.2 sec sleep after whole for loop execution
    snake.move_snake()
    # Detecting Collision of Snake with the Food
    if snake.head.distance(food) < 10:  # Distance is one of the inbuilt Turtle
        # functions which is used to find out the distance between a
        # co-ordinate and a turtle / between two turtles
        scoreboard.new_score()
        snake.extend()
        food.new_location()

    # Detecting collision of snake with the Wall
    if snake.head.xcor() > 290 or snake.head.xcor() < -290 or \
            snake.head.ycor() > 290 or snake.head.ycor() < -290:
        game_over = True
        scoreboard.game_over()

    # Detecting collision of snake with the body
    for part in snake.snake:
        if snake.head == part:
            pass
        elif snake.head.distance(part) < 5:
            game_over = True
            scoreboard.game_over()

screen.exitonclick()
